# -*- coding: cp1251 -*-

import kivy
from kivy.config import Config
from kivy.graphics import Color
from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.uix.textinput import TextInput
from kivy.app import App
from kivy.uix.button import Button
from kivy.uix.label import Label
from kivy.uix.boxlayout import BoxLayout



class SearchScreen(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        # создаем вертикальный BoxLayout
        layout = BoxLayout(orientation='vertical')

        # добавляем название приложения и кнопку фильтра в верхнюю часть
        header_layout = BoxLayout(size_hint=(1, 0.1))
        header_layout.add_widget(Label(text='To Do Look', size_hint=(0.6, 1), halign='center'))
        header_layout.add_widget(Button(background_color=(0, 1, 0, 1), text='Фильтр', color=(0, 0, 0, 1), size_hint=(0.2, 1)))
        layout.add_widget(header_layout)

        # добавляем поле для ввода
        input_field = TextInput(background_color=(255/256, 87/256, 34/256, 1), hint_text='Ввести', size_hint=(1, 0.1))
        layout.add_widget(input_field)

        # добавляем кнопку "Вернуться назад"
        back_button = Button(background_color=(229/256, 115/256, 115/256, 1), text='Вернуться назад', on_press=self.goto_main_screen, size_hint=(1, 0.1))
        layout.add_widget(back_button)

        self.add_widget(layout)

    def goto_main_screen(self, instance):
        self.manager.current = 'main'



class ReminderScreen(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        layout = BoxLayout(orientation='vertical')
        
        # Верхняя часть
        title = Label(color=(0, 1, 1, 1), text='To Do Look')
        settings = Button(background_color=(0, 1, 0, 1), text='Настройки', color=(0, 0, 0, 1), on_press=self.goto_option_screen)
        layout.add_widget(title)
        layout.add_widget(settings)
        
        # Средняя часть
        create_note = Button(text='Создать заметку', on_press=self.goto_CreateNote_screen)
        create_reminder = Button(text='Создать напоминание', on_press=self.goto_CreateReminder_screen)
        cancel = Button(background_color=(1, 8/255, 0, 1), text='Отмена', on_press=self.goto_main_screen)
        layout.add_widget(create_note)
        layout.add_widget(create_reminder)
        layout.add_widget(cancel)
        
        # Нижняя часть
        add = Button(text='+', size_hint=(None, None), size=(50, 50), pos_hint={'right': 1, 'bottom': 1})
        layout.add_widget(add)
        
        self.add_widget(layout)

    def goto_option_screen(self, instance):
        self.manager.current = 'option'

    def goto_main_screen(self, instance):
        self.manager.current = 'main'

    def goto_CreateReminder_screen(self, instance):
        self.manager.current = 'create_reminder'
    
    def goto_CreateNote_screen(self, instance):
        self.manager.current = 'create_note'


class Create_reminderScreen(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        # создаем вертикальный BoxLayout
        layout = BoxLayout(orientation='vertical')

        # добавляем название приложения и кнопки "Сохранить" и "Отмена" в верхнюю часть
        header_layout = BoxLayout(size_hint=(1, 0.1))
        header_layout.add_widget(Button(background_color=(255/256, 8/256, 0, 1), text='Отмена', color=(0, 0, 0, 1), on_press=self.goto_main_screen,size_hint=(0.1, 1)))
        header_layout.add_widget(Label(text='To Do Look', size_hint=(0.8, 1), halign='center'))
        header_layout.add_widget(Button(background_color=(0, 1, 0, 1), text='Сохранить', color=(0, 0, 0, 1), size_hint=(0.1, 1)))
        layout.add_widget(header_layout)

        # добавляем поле для ввода категории
        category_input = TextInput(background_color=(158/256, 158/256, 158/256, 1), hint_text='Категория', size_hint=(1, 0.1))
        layout.add_widget(category_input)

        # добавляем поле для ввода заголовка
        title_input = TextInput(background_color=(189/256, 189/256, 189/256, 1), hint_text='Заголовок', size_hint=(1, 0.1))
        layout.add_widget(title_input)

        # добавляем поле для ввода текста
        text_input = TextInput(background_color=(238/256, 238/256, 238/256, 1), hint_text='Введите текст', size_hint=(1, 0.6))
        layout.add_widget(text_input)

        # добавляем поле для ввода времени
        time_input = TextInput(background_color=(236/256, 239/256, 241/256, 1), hint_text='Время', size_hint=(1, 0.1))
        layout.add_widget(time_input)

        self.add_widget(layout)

    def goto_main_screen(self, instance):
        self.manager.current = 'main'


class MainScreen(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        # создаем вертикальный BoxLayout
        layout = BoxLayout(orientation='vertical')
        
        # добавляем название приложения и кнопку "Настройки" в верхнюю часть
        header_layout = BoxLayout(size_hint=(1, 0.1))
        header_layout.add_widget(Label(color=(0, 1, 1, 1), text='To Do Look', size_hint=(0.9, None)))
        header_layout.add_widget(Button(background_color=(0, 1, 0, 1), text='Настройки', color=(0, 0, 0, 1), on_press=self.goto_option_screen, size_hint=(0.1, None)))
        layout.add_widget(header_layout)
        
        # добавляем кнопку "Поиск"
        search_button = Button(background_color=(255/256, 87/256, 34/256, 1), text='Поиск', color=(0, 0, 0, 1), on_press=self.goto_search_screen,size=(200, 50), size_hint=(1, None), pos_hint={'x': 0, 'y': 0.1})
        layout.add_widget(search_button)
        
        # добавляем кнопку "+" в правый нижний угол
        add_button = Button(background_color=(1, 0, 0, 1), text='+', color=(0, 0, 0, 1), on_press=self.goto_reminder_screen,size=(50, 50), size_hint=(None, None), pos_hint={'x': 0.9, 'y': 0})
        layout.add_widget(add_button)
        
        self.add_widget(layout)


    def goto_option_screen(self, instance):
        self.manager.current = 'option'


    def goto_search_screen(self, instance):
        self.manager.current = 'search'

    def goto_reminder_screen(self, instance):
        self.manager.current = 'reminder'



class Create_noteScreen(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        # создаем вертикальный BoxLayout
        layout = BoxLayout(orientation='vertical')

        # добавляем название приложения и кнопки "Сохранить" и "Отмена" в верхнюю часть
        header_layout = BoxLayout(size_hint=(1, 0.1))
        header_layout.add_widget(Button(background_color=(255/256, 8/256, 0, 1), text='Отмена', color=(0, 0, 0, 1), on_press=self.goto_main_screen, size_hint=(0.1, 1)))
        header_layout.add_widget(Label(text='To Do Look', size_hint=(0.8, 1), halign='center'))
        header_layout.add_widget(Button(background_color=(0, 1, 0, 1), text='Сохранить', color=(0, 0, 0, 1), size_hint=(0.1, 1)))
        layout.add_widget(header_layout)

        # добавляем поле для ввода категории
        category_input = TextInput(background_color=(158/256, 158/256, 158/256, 1), hint_text='Категория', size_hint=(1, 0.1))
        layout.add_widget(category_input)

        # добавляем поле для ввода заголовка
        title_input = TextInput(background_color=(189/256, 189/256, 189/256, 1), hint_text='Заголовок', size_hint=(1, 0.1))
        layout.add_widget(title_input)

        # добавляем поле для ввода текста
        text_input = TextInput(background_color=(238/256, 238/256, 238/256, 1), hint_text='Введите текст', size_hint=(1, 0.7))
        layout.add_widget(text_input)

        self.add_widget(layout)

    def goto_main_screen(self, instance):
        self.manager.current = 'main'




class OptionScreen(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        # создаем вертикальный BoxLayout
        layout = BoxLayout(orientation='vertical')
        
        # добавляем название приложения и кнопку настроек в верхнюю часть
        header_layout = BoxLayout(size_hint=(1, 0.1))
        header_layout.add_widget(Button(background_color=(255/256, 87/256, 34/256, 1), text='Настройки', color=(0, 0, 0, 1), size_hint=(0.2, 1)))
        header_layout.add_widget(Label(color=(0, 1, 1, 1), text='To Do Look', size_hint=(0.6, 1), halign='center'))
        header_layout.add_widget(Button(text='', size_hint=(0.2, 1)))
        layout.add_widget(header_layout)
        
        # добавляем надпись "Настройки"
        settings_label = Label(text='Настройки', size_hint=(1, 0.1), halign='center')
        layout.add_widget(settings_label)
        
        # добавляем кнопку "Выбрать тему"
        theme_button = Button(background_color=(189/256, 189/256, 189/256, 1), text='Выбрать тему', size_hint=(1, 0.1))
        layout.add_widget(theme_button)
        
        # добавляем кнопку "Настроить размер текста"
        font_size_button = Button(background_color=(236/256, 239/256, 241/256, 1), text='Настроить размер текста', size_hint=(1, 0.1))
        layout.add_widget(font_size_button)
        
        # добавляем кнопку "Настроить уведомления"
        notifications_button = Button(background_color=(186/256, 104/256, 200/256, 1), text='Настроить уведомления', size_hint=(1, 0.1))
        layout.add_widget(notifications_button)
        
        # добавляем кнопку "Настроить громкость"
        volume_button = Button(background_color=(197/256, 202/256, 233/256, 1), text='Настроить громкость', size_hint=(1, 0.1))
        layout.add_widget(volume_button)
        
        # добавляем кнопку "Вернуться назад"
        back_button = Button(background_color=(229/256, 115/256, 115/256, 1), text='Вернуться назад', on_press=self.goto_main_screen, size_hint=(1, 0.1))
        layout.add_widget(back_button)
        
        self.add_widget(layout)

    def goto_main_screen(self, instance):
        self.manager.current = 'main'



class MyScreenManager(ScreenManager):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        
        # добавляем экраны
        self.add_widget(MainScreen(name='main'))
        self.add_widget(OptionScreen(name='option'))
        self.add_widget(SearchScreen(name='search'))
        self.add_widget(ReminderScreen(name='reminder'))
        self.add_widget(Create_reminderScreen(name='create_reminder'))
        self.add_widget(Create_noteScreen(name='create_note'))

# создаем приложение
class MyApp(App):
    def build(self):
        return MyScreenManager()

if __name__ == '__main__':
    MyApp().run()
